import paramiko
import re
import getpass

ROUTER_IP = "192.168.0.254"
USERNAME = "admin"
VPN_INTERFACE = "OpenVPN0"


def ssh_exec(command, password):
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    try:
        ssh.connect(ROUTER_IP, username=USERNAME, password=password, timeout=10)
        stdin, stdout, stderr = ssh.exec_command(command)
        output = stdout.read().decode(errors='ignore')
        return output
    finally:
        ssh.close()


def get_interface_status(interface, password):
    result = ssh_exec(f"show interface {interface}", password)
    link_match = re.search(r"link:\s+(up|down)", result, re.IGNORECASE)
    state_match = re.search(r"state:\s+(up|down)", result, re.IGNORECASE)

    if link_match and state_match:
        link = link_match.group(1).lower()
        state = state_match.group(1).lower()
        return link, state
    else:
        print(f"[!] –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ {interface}.")
        return None, None


def toggle_interface(interface, password):
    link, state = get_interface_status(interface, password)
    if link is None or state is None:
        return

    print(f"\nüõ∞Ô∏è  –°—Ç–∞—Ç—É—Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ {interface}:")
    print(f"   link:  {link}")
    print(f"   state: {state}")

    if link == "up" and state == "up":
        action = "–≤—ã–∫–ª—é—á–∏—Ç—å"
    else:
        action = "–≤–∫–ª—é—á–∏—Ç—å"

    confirm = input(f"\n‚ùî –í—ã —Ö–æ—Ç–∏—Ç–µ {action} –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å {interface}? (y/n): ").strip().lower()
    if confirm == "y":
        command = f"interface {interface} {'down' if link == 'up' else 'up'}"
        print(f"\n‚öô –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è: {command}")
        ssh_exec(command, password)
        print("‚úÖ –ì–æ—Ç–æ–≤–æ.")
    else:
        print("‚ùé –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")


if __name__ == "__main__":
    print(f"üîê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ {ROUTER_IP} –∫–∞–∫ {USERNAME}")
    password = getpass.getpass("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ")
    toggle_interface(VPN_INTERFACE, password)
